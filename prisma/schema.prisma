generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Producer {
  id        Int      @id @default(autoincrement())
  name      String
  document  String   @unique
  phone     String?
  email     String   @unique
  zipCode   String
  city      String
  street    String
  number    String
  complement String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  areas     Area[]

  @@map("producers")
}

model Area {
  id               Int                     @id @default(autoincrement())
  name             String
  polygon          Unsupported("geometry")
  createdAt        DateTime                @default(now())
  updatedAt        DateTime                @updatedAt
  producerId       Int
  soilTypeId       Int
  irrigationTypeId Int
  isActive         Boolean                 @default(true)
  irrigationType   IrrigationType          @relation(fields: [irrigationTypeId], references: [id])
  producer         Producer                @relation(fields: [producerId], references: [id])
  soilType         SoilType                @relation(fields: [soilTypeId], references: [id])
  plantings        Planting[]

  @@map("areas")
}

model Harvest {
  id        Int       @id @default(autoincrement())
  name      String
  cycle     String?
  startDate DateTime
  endDate   DateTime?
  status    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  plantingId Int

  planting Planting @relation(fields: [plantingId], references: [id])

  @@map("harvests")
}

model Planting {
  id                  Int       @id @default(autoincrement())
  name                String
  color               String
  plantingDate        DateTime
  plantingEndDate     DateTime?
  expectedHarvestDate DateTime?
  quantityPlanted     Float
  quantityHarvested   Float?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  areaId    Int
  productId Int
  varietyId Int

  area      Area     @relation(fields: [areaId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  variety   Variety  @relation(fields: [varietyId], references: [id])
  harvests  Harvest[]

  @@map("plantings")
}

model SoilType {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?
  areas       Area[]

  @@map("soil_types")
}

model IrrigationType {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?
  areas       Area[]

  @@map("irrigation_types")
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  plantings Planting[]
  varieties Variety[]

  @@map("products")
}

model Variety {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  productId Int
  product   Product  @relation(fields: [productId], references: [id])

  plantings Planting[]

  @@map("varieties")
}